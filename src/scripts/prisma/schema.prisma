// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
  provider = "prisma-client-js"
}


datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Modelos actualizados
model Rol {
  id          Int      @id @default(autoincrement())
  nombre      String   @unique
  descripcion String?
  usuarios    Usuario[]
}

model Usuario {
  id            Int            @id @default(autoincrement())
  cedula        String         @unique
  firstName     String         @map("firstName") // Renombrado para ajustarse a los nuevos datos
  lastName      String         @map("lastName") // Renombrado para ajustarse a los nuevos datos
  telefono      String
  correo        String         @unique
  rolId         Int
  rol           Rol            @relation(fields: [rolId], references: [id])
  profesor      Profesor?
  representante Representante?
  estudiante    Estudiante?
  birthdate     DateTime       @map("birthdate") // Nuevo campo
  gender        String?        // Asumiendo que esta informaci√≥n se puede inferir del nombre
  address       String         // Nuevo campo
}

model Profesor {
  id            Int         @id @default(autoincrement())
  usuarioId     Int         @unique
  codigo        String      @unique
  grado         String      // Modificado para reflejar el nuevo modelo
  area          String      // Modificado para reflejar el nuevo modelo
  usuario       Usuario     @relation(fields: [usuarioId], references: [id])
  aulas         Aula[]
}

model Representante {
  id           Int           @id @default(autoincrement())
  usuarioId    Int           @unique
  direccion    String
  ocupacion    String
  estadoCivil  String
  edad         Int
  usuario      Usuario       @relation(fields: [usuarioId], references: [id])
  estudiantes  Estudiante[]
}

model Estudiante {
  id              Int            @id @default(autoincrement())
  usuarioId       Int            @unique
  representanteId Int
  usuario         Usuario        @relation(fields: [usuarioId], references: [id])
  representante   Representante  @relation(fields: [representanteId], references: [id])
  aulas           Aula[]
}

model Aula {
  id            Int      @id @default(autoincrement())
  profesorId    Int      // Cambiado para reflejar el nuevo modelo
  estudianteId  Int     // Cambiado para reflejar el nuevo modelo
  nombre        String
  profesor    Profesor   @relation(fields: [profesorId], references: [id])
  estudiante  Estudiante @relation(fields: [estudianteId], references: [id])
  actividad   Actividad[]
}

model Actividad {
  id          Int      @id @default(autoincrement())
  fechaInicio DateTime
  fechaFinal  DateTime
  nota        Float
  comentario  String?
  entregado   Boolean
  aulas       Aula[]
}